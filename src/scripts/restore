#!/bin/sh
. "$(dirname $0)"/common
. "$ETC_PATH"/config


########################################################################################################################
# COMMON FUNCTIONS
########################################################################################################################
quote_sh() {
	sed -e 's|\\|\\\\|g' -e 's|\"|\\\"|g' -e 's|`|\\`|g' -e 's|\\$|\\$|g'
}

display_help() {
    echo "Usage: $0 /path/to/file.tar.gz [option...]" >&2
    echo
    echo "   --restore-file             Gitlab backup file to restore. *required'"
    echo
    # echo some stuff here for the -a or --add-options
    exit 1
}

########################################################################################################################
# DEFAULTS
########################################################################################################################
BACKUP_DIR="$SHARE_PATH"/backup
GITEA_DIR="$SHARE_PATH/$SHARE"
GITEA_PACKAGE_CONTROL="/var/packages/$PKG_NAME/scripts/start-stop-status"

RESTORE_TMP=/tmp/"$GITEA_NAME"_restore

restore_file=

########################################################################################################################
# PARAMETER HANDLING
########################################################################################################################
while [ $# -ge 1 ]; do
    case "$1" in
        --restore-file)
            restore_file="$2"; shift 2
            if ! [ -f $restore_file ]; then
                restore_file="$BACKUP_DIR"/"$restore_file"
                if ! [ -f $restore_file ]; then
                  echo "File: $restore_file not found" >&2
                  exit 1
                fi
            fi
        ;;
        -h | --help)
            display_help  # Call your function
            exit 0
        ;;
        --) # End of all options
            shift
            break
        ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            ## or call function display_help
            exit 1
        ;;
        *)  # No more options
            break
        ;;
    esac
done

########################################################################################################################
# VALIDATE PARAMETER DEPENDENCIES
########################################################################################################################
if [ -z "$restore_file" ]; then
    echo "--restore-file is not set!"
    exit 1
fi

########################################################################################################################
# UNZIP FILE
########################################################################################################################
if [ -d "$RESTORE_TMP" ]; then
    rm -rf "$RESTORE_TMP"
fi
mkdir -p "$RESTORE_TMP"

echo "extracting $restore_file"
tar xfz "$restore_file" -C "$RESTORE_TMP"

########################################################################################################################
# STOP SYNOLOGY PACKAGE
########################################################################################################################
echo "stopping gitea"
x=$($GITEA_PACKAGE_CONTROL stop 2> /dev/null)
sleep 5

########################################################################################################################
# RESTORE GITEA DIR
########################################################################################################################
echo "extracting $RESTORE_TMP/gitea.tar.gz to $GITEA_DIR"
rm -rf $GITEA_DIR
mkdir -p $GITEA_DIR
tar xpfz $RESTORE_TMP"/gitea.tar.gz" --strip-components=1 -C $GITEA_DIR

########################################################################################################################
# FINISH
########################################################################################################################
echo "start gitea"
x=$($GITEA_PACKAGE_CONTROL start 2> /dev/null)
rm -rf "$RESTORE_TMP"
sleep 5
echo "restore completed!"
